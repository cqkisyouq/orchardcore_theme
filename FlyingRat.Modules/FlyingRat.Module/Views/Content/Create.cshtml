@model FlyingRat.Module.ViewModel.PublishContentViewModel

<div class="container">
    <div class="row">
        <form class="col-12" asp-action="Create" asp-route-returnUrl="@Context.Request.Query["ReturnUrl"]" method="post" enctype="multipart/form-data">
            @Html.ValidationSummary()
            <div class="form-group">
                <input class="form-control" asp-for="Title" placeholde r="请输入标题" type="text" onchange="setValue(this,'partTitle')"/>
                @Html.ValidationMessageFor(x => x.Title)
            </div>
            <div class="form-group">
                <input class="form-control" asp-for="Description" placeholder="请输入摘要" type="text" onchange="setValue(this,'partSubtitle')"/>
                @Html.ValidationMessageFor(x => x.Description)
            </div>
            <div class="form-group">
                <textarea class="form-control" asp-for="Content" placeholder="请输入内容" onchange="setValue(this,'partMarkdown')"></textarea>
                @Html.ValidationMessageFor(x => x.Content)
            </div>
            <input hidden asp-for="TargetId" />
            <input hidden name="TitlePart.Title" id="partTitle" value="@Model.Title"/>
            <input hidden name="BlogPost.Subtitle.Text" id="partSubtitle" value="@Model.Description"/>
            <input hidden name="MarkdownBodyPart.Markdown" id="partMarkdown" value="@Model.Content"/>
            <input class="btn btn-primary" type="submit" name="submit.Publish" value="确定" />
        </form>
    </div>
</div>
<script at="Foot">
    function setValue(target, id) {
        $("#"+id).val($(target).val());
    }
</script>